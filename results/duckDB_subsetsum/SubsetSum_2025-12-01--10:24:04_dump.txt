seed = 1736673844053062456
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
4,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,1,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,2,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,3,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,5,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,5,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,5,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,5,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,5,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,5,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,4,true,10:24:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
10,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,4,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,4,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,4,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,4,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,5,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,5,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,5,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,5,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,8,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,7,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,6,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,10,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,10,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,12,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,11,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,10,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,9,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,8,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,8,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,18,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,16,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,17,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,16,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,17,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,17,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,17,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,18,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,18,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,18,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,18,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,10,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
14,-1,31,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,31,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,32,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,31,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,43,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,43,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,44,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,43,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,18,true,10:24:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,17,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,18,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,17,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,60,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,58,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,59,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,59,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,59,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,58,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,58,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,59,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
15,-1,62,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,61,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,60,true,10:24:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,60,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,116,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,116,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,113,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,115,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,64,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,64,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,64,true,10:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,64,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,34,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,35,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,35,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,34,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,43,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,43,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,43,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,42,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
16,-1,62,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,61,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,62,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,62,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,67,true,10:24:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,67,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,67,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,68,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,118,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,117,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,118,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,116,true,10:24:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,157,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,157,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,159,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,159,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,63,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,64,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,63,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,64,true,10:24:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
17,-1,119,true,10:24:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,120,true,10:24:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,119,true,10:24:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,117,true,10:24:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,121,true,10:24:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,122,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,120,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,120,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,125,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,121,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,121,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,124,true,10:24:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,479,true,10:24:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,484,true,10:24:15
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,460,true,10:24:15
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,472,true,10:24:16
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,464,true,10:24:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,465,true,10:24:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,464,true,10:24:18
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,465,true,10:24:18
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
18,-1,604,true,10:24:19
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,597,true,10:24:20
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,603,true,10:24:21
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,605,true,10:24:21
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,952,true,10:24:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,959,true,10:24:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,934,true,10:24:25
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,968,true,10:24:26
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,167,true,10:24:26
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,168,true,10:24:27
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,169,true,10:24:27
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,165,true,10:24:27
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,473,true,10:24:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,484,true,10:24:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,473,true,10:24:29
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,476,true,10:24:29
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,422,true,10:24:30
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,411,true,10:24:31
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,414,true,10:24:31
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,415,true,10:24:32
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
19,-1,1706,true,10:24:35
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1702,true,10:24:37
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1718,true,10:24:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1714,true,10:24:40
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1109,true,10:24:42
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1150,true,10:24:44
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1117,true,10:24:45
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1122,true,10:24:46
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,619,true,10:24:47
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,607,true,10:24:48
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,620,true,10:24:48
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,608,true,10:24:49
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,956,true,10:24:51
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,941,true,10:24:52
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,953,true,10:24:53
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,940,true,10:24:54
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,947,true,10:24:56
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,943,true,10:24:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,940,true,10:24:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,958,true,10:24:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
20,-1,523,true,10:25:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,523,true,10:25:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,538,true,10:25:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,523,true,10:25:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,420,true,10:25:02
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,427,true,10:25:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,420,true,10:25:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,425,true,10:25:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,507,true,10:25:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,502,true,10:25:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,507,true,10:25:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,503,true,10:25:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,871,true,10:25:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,876,true,10:25:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,871,true,10:25:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,855,true,10:25:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1990,true,10:25:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1994,true,10:25:16
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1982,true,10:25:18
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,2001,true,10:25:20
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
21,-1,2067,true,10:25:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2048,true,10:25:27
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2051,true,10:25:29
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2049,true,10:25:31
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,3997,true,10:25:39
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4056,true,10:25:43
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4029,true,10:25:47
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4007,true,10:25:51
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2023,true,10:25:55
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2022,true,10:25:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2007,true,10:25:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2017,true,10:26:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1217,true,10:26:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1195,true,10:26:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1222,true,10:26:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1192,true,10:26:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4051,true,10:26:15
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4025,true,10:26:19
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4015,true,10:26:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,4065,true,10:26:27
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
22,-1,1098,true,10:26:30
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1087,true,10:26:31
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1085,true,10:26:32
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1098,true,10:26:33
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4107,true,10:26:41
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4085,true,10:26:45
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4134,true,10:26:49
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4122,true,10:26:53
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,5771,true,10:27:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,5817,true,10:27:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,5810,true,10:27:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,5775,true,10:27:22
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,16735,true,10:27:56
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,16793,true,10:28:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,16604,true,10:28:30
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,16849,true,10:28:46
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4198,true,10:28:55
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4176,true,10:28:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4191,true,10:29:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4173,true,10:29:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
23,-1,8776,true,10:29:25
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8763,true,10:29:34
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8746,true,10:29:42
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8809,true,10:29:51
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8311,true,10:30:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8449,true,10:30:16
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8323,true,10:30:25
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,8371,true,10:30:33
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4531,true,10:30:42
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4529,true,10:30:47
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4491,true,10:30:51
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4542,true,10:30:56
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34516,true,10:32:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -1);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34415,true,10:32:39
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -1);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34253,true,10:33:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -1);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,33970,true,10:33:47
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -1);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34485,true,10:34:55
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34452,true,10:35:30
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34132,true,10:36:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,34468,true,10:36:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
24,-1,20427,true,10:37:19
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,20189,true,10:37:39
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,20510,true,10:38:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,20652,true,10:38:20
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,70316,true,10:40:41
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,69295,true,10:41:51
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,70315,true,10:43:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,timeout,false,10:43:20
