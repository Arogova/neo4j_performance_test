seed = 1658241430864689873
2,0.1,3,false,16:37:10
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.1,1,false,16:37:10
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.1,1,false,16:37:10
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.1,2,false,16:37:10
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.1,3,false,16:37:10
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.1,3,true,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.1,3,true,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.1,3,true,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.1,4,true,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.1,3,true,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.1,4,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.1,1,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v1)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v1)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v1)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v1)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v1)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.1,5,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.1,5,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.1,4,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.1,5,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.1,5,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v1)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v1)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v1)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.1,2,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v1)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.1,3,false,16:37:11
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v1)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,38,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,38,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,38,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
11,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
11,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
11,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
11,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
11,0.1,39,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
12,0.1,42,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v9)
CREATE (v5)-[:Edge]->(v11)
CREATE (v6)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v11)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v10)
CREATE (v10)-[:Edge]->(v11)
CREATE (v11)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
12,0.1,42,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v9)
CREATE (v5)-[:Edge]->(v11)
CREATE (v6)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v11)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v10)
CREATE (v10)-[:Edge]->(v11)
CREATE (v11)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
12,0.1,42,false,16:37:12
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v9)
CREATE (v5)-[:Edge]->(v11)
CREATE (v6)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v11)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v10)
CREATE (v10)-[:Edge]->(v11)
CREATE (v11)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
12,0.1,41,false,16:37:13
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v9)
CREATE (v5)-[:Edge]->(v11)
CREATE (v6)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v11)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v10)
CREATE (v10)-[:Edge]->(v11)
CREATE (v11)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
12,0.1,41,false,16:37:13
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v9)
CREATE (v5)-[:Edge]->(v11)
CREATE (v6)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v11)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v10)
CREATE (v10)-[:Edge]->(v11)
CREATE (v11)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
13,0.1,381,false,16:37:13
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v9)
CREATE (v4)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v10)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v1)
CREATE (v10)-[:Edge]->(v3)
CREATE (v11)-[:Edge]->(v0)
CREATE (v12)-[:Edge]->(v4)
CREATE (v12)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
13,0.1,386,false,16:37:13
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v9)
CREATE (v4)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v10)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v1)
CREATE (v10)-[:Edge]->(v3)
CREATE (v11)-[:Edge]->(v0)
CREATE (v12)-[:Edge]->(v4)
CREATE (v12)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
13,0.1,386,false,16:37:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v9)
CREATE (v4)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v10)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v1)
CREATE (v10)-[:Edge]->(v3)
CREATE (v11)-[:Edge]->(v0)
CREATE (v12)-[:Edge]->(v4)
CREATE (v12)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
13,0.1,383,false,16:37:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v9)
CREATE (v4)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v10)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v1)
CREATE (v10)-[:Edge]->(v3)
CREATE (v11)-[:Edge]->(v0)
CREATE (v12)-[:Edge]->(v4)
CREATE (v12)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
13,0.1,382,false,16:37:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v9)
CREATE (v4)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v10)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v1)
CREATE (v10)-[:Edge]->(v3)
CREATE (v11)-[:Edge]->(v0)
CREATE (v12)-[:Edge]->(v4)
CREATE (v12)-[:Edge]->(v10)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
14,0.1,328,false,16:37:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v0)-[:Edge]->(v12)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v11)
CREATE (v8)-[:Edge]->(v12)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v13)
CREATE (v10)-[:Edge]->(v13)
CREATE (v13)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
14,0.1,329,false,16:37:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v0)-[:Edge]->(v12)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v11)
CREATE (v8)-[:Edge]->(v12)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v13)
CREATE (v10)-[:Edge]->(v13)
CREATE (v13)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
14,0.1,328,false,16:37:16
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v0)-[:Edge]->(v12)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v11)
CREATE (v8)-[:Edge]->(v12)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v13)
CREATE (v10)-[:Edge]->(v13)
CREATE (v13)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
14,0.1,327,false,16:37:16
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v0)-[:Edge]->(v12)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v11)
CREATE (v8)-[:Edge]->(v12)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v13)
CREATE (v10)-[:Edge]->(v13)
CREATE (v13)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
14,0.1,328,false,16:37:17
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v0)-[:Edge]->(v12)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v11)
CREATE (v8)-[:Edge]->(v12)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v13)
CREATE (v10)-[:Edge]->(v13)
CREATE (v13)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
15,0.1,198944,false,16:40:36
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v9)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v12)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v9)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v11)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v1)
CREATE (v11)-[:Edge]->(v0)
CREATE (v11)-[:Edge]->(v6)
CREATE (v12)-[:Edge]->(v2)
CREATE (v12)-[:Edge]->(v8)
CREATE (v13)-[:Edge]->(v7)
CREATE (v13)-[:Edge]->(v10)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
15,0.1,199963,false,16:43:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v9)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v12)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v9)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v11)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v1)
CREATE (v11)-[:Edge]->(v0)
CREATE (v11)-[:Edge]->(v6)
CREATE (v12)-[:Edge]->(v2)
CREATE (v12)-[:Edge]->(v8)
CREATE (v13)-[:Edge]->(v7)
CREATE (v13)-[:Edge]->(v10)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
15,0.1,198776,false,16:47:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v9)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v12)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v9)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v11)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v1)
CREATE (v11)-[:Edge]->(v0)
CREATE (v11)-[:Edge]->(v6)
CREATE (v12)-[:Edge]->(v2)
CREATE (v12)-[:Edge]->(v8)
CREATE (v13)-[:Edge]->(v7)
CREATE (v13)-[:Edge]->(v10)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
15,0.1,199293,false,16:50:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v9)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v12)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v9)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v11)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v1)
CREATE (v11)-[:Edge]->(v0)
CREATE (v11)-[:Edge]->(v6)
CREATE (v12)-[:Edge]->(v2)
CREATE (v12)-[:Edge]->(v8)
CREATE (v13)-[:Edge]->(v7)
CREATE (v13)-[:Edge]->(v10)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
15,0.1,199414,false,16:53:53
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v9)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v12)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v9)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v10)
CREATE (v6)-[:Edge]->(v11)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v1)
CREATE (v11)-[:Edge]->(v0)
CREATE (v11)-[:Edge]->(v6)
CREATE (v12)-[:Edge]->(v2)
CREATE (v12)-[:Edge]->(v8)
CREATE (v13)-[:Edge]->(v7)
CREATE (v13)-[:Edge]->(v10)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
17,0.1,100182,false,17:20:38
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v15 {name:15})
CREATE (v16 {name:16})
CREATE (v0)-[:Edge]->(v10)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v13)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v9)
CREATE (v2)-[:Edge]->(v12)
CREATE (v3)-[:Edge]->(v10)
CREATE (v3)-[:Edge]->(v12)
CREATE (v4)-[:Edge]->(v11)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v0)
CREATE (v10)-[:Edge]->(v4)
CREATE (v10)-[:Edge]->(v16)
CREATE (v11)-[:Edge]->(v16)
CREATE (v12)-[:Edge]->(v6)
CREATE (v13)-[:Edge]->(v9)
CREATE (v13)-[:Edge]->(v12)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v3)
CREATE (v15)-[:Edge]->(v6)
CREATE (v15)-[:Edge]->(v9)
CREATE (v16)-[:Edge]->(v10)
CREATE (v16)-[:Edge]->(v12)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
17,0.1,99893,false,17:22:18
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v15 {name:15})
CREATE (v16 {name:16})
CREATE (v0)-[:Edge]->(v10)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v13)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v9)
CREATE (v2)-[:Edge]->(v12)
CREATE (v3)-[:Edge]->(v10)
CREATE (v3)-[:Edge]->(v12)
CREATE (v4)-[:Edge]->(v11)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v0)
CREATE (v10)-[:Edge]->(v4)
CREATE (v10)-[:Edge]->(v16)
CREATE (v11)-[:Edge]->(v16)
CREATE (v12)-[:Edge]->(v6)
CREATE (v13)-[:Edge]->(v9)
CREATE (v13)-[:Edge]->(v12)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v3)
CREATE (v15)-[:Edge]->(v6)
CREATE (v15)-[:Edge]->(v9)
CREATE (v16)-[:Edge]->(v10)
CREATE (v16)-[:Edge]->(v12)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
17,0.1,100521,false,17:23:58
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v15 {name:15})
CREATE (v16 {name:16})
CREATE (v0)-[:Edge]->(v10)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v13)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v9)
CREATE (v2)-[:Edge]->(v12)
CREATE (v3)-[:Edge]->(v10)
CREATE (v3)-[:Edge]->(v12)
CREATE (v4)-[:Edge]->(v11)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v0)
CREATE (v10)-[:Edge]->(v4)
CREATE (v10)-[:Edge]->(v16)
CREATE (v11)-[:Edge]->(v16)
CREATE (v12)-[:Edge]->(v6)
CREATE (v13)-[:Edge]->(v9)
CREATE (v13)-[:Edge]->(v12)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v3)
CREATE (v15)-[:Edge]->(v6)
CREATE (v15)-[:Edge]->(v9)
CREATE (v16)-[:Edge]->(v10)
CREATE (v16)-[:Edge]->(v12)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
17,0.1,100154,false,17:25:39
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v15 {name:15})
CREATE (v16 {name:16})
CREATE (v0)-[:Edge]->(v10)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v13)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v9)
CREATE (v2)-[:Edge]->(v12)
CREATE (v3)-[:Edge]->(v10)
CREATE (v3)-[:Edge]->(v12)
CREATE (v4)-[:Edge]->(v11)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v0)
CREATE (v10)-[:Edge]->(v4)
CREATE (v10)-[:Edge]->(v16)
CREATE (v11)-[:Edge]->(v16)
CREATE (v12)-[:Edge]->(v6)
CREATE (v13)-[:Edge]->(v9)
CREATE (v13)-[:Edge]->(v12)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v3)
CREATE (v15)-[:Edge]->(v6)
CREATE (v15)-[:Edge]->(v9)
CREATE (v16)-[:Edge]->(v10)
CREATE (v16)-[:Edge]->(v12)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
17,0.1,100310,false,17:27:19
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v10 {name:10})
CREATE (v11 {name:11})
CREATE (v12 {name:12})
CREATE (v13 {name:13})
CREATE (v14 {name:14})
CREATE (v15 {name:15})
CREATE (v16 {name:16})
CREATE (v0)-[:Edge]->(v10)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v13)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v9)
CREATE (v2)-[:Edge]->(v12)
CREATE (v3)-[:Edge]->(v10)
CREATE (v3)-[:Edge]->(v12)
CREATE (v4)-[:Edge]->(v11)
CREATE (v5)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v9)
CREATE (v10)-[:Edge]->(v0)
CREATE (v10)-[:Edge]->(v4)
CREATE (v10)-[:Edge]->(v16)
CREATE (v11)-[:Edge]->(v16)
CREATE (v12)-[:Edge]->(v6)
CREATE (v13)-[:Edge]->(v9)
CREATE (v13)-[:Edge]->(v12)
CREATE (v13)-[:Edge]->(v14)
CREATE (v14)-[:Edge]->(v3)
CREATE (v15)-[:Edge]->(v6)
CREATE (v15)-[:Edge]->(v9)
CREATE (v16)-[:Edge]->(v10)
CREATE (v16)-[:Edge]->(v12)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.2,104,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.2,2,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.2,1,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.2,1,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.2,2,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.2,1,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.2,3,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.2,3,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.2,3,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.2,3,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.2,6,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.2,2,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.2,2,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.2,2,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.2,2,true,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.2,9,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.2,9,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.2,9,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.2,8,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.2,8,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.2,2,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.2,2,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.2,2,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.2,3,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.2,2,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.2,6,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.2,5,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.2,5,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.2,5,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.2,6,false,18:42:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.2,12,true,18:42:35
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.2,12,true,18:42:35
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.2,11,true,18:42:35
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.2,12,true,18:42:35
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.2,12,true,18:42:35
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.2,99653,true,18:44:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.2,99787,true,18:45:54
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.2,100053,true,18:47:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.2,100537,true,18:49:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.2,100092,true,18:50:55
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,3,false,18:50:55
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v8)-[:Edge]->(v5)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v9)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,3,false,18:50:55
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v8)-[:Edge]->(v5)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v9)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,3,false,18:50:55
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v8)-[:Edge]->(v5)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v9)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,3,false,18:50:55
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v8)-[:Edge]->(v5)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v9)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,3,false,18:50:55
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v7)
CREATE (v8)-[:Edge]->(v5)
CREATE (v9)-[:Edge]->(v0)
CREATE (v9)-[:Edge]->(v9)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.30000000000000004,89,true,23:01:44
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.30000000000000004,2,true,23:01:44
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.30000000000000004,2,true,23:01:44
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.30000000000000004,1,true,23:01:44
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.30000000000000004,1,true,23:01:44
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.30000000000000004,2,false,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.30000000000000004,2,false,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.30000000000000004,2,false,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.30000000000000004,2,false,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.30000000000000004,2,false,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.30000000000000004,4,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.30000000000000004,1,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.30000000000000004,9,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.30000000000000004,9,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.30000000000000004,8,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.30000000000000004,9,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.30000000000000004,9,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.30000000000000004,3,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.30000000000000004,3,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.30000000000000004,2,true,23:01:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.30000000000000004,279071,true,23:06:24
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.30000000000000004,280340,true,23:11:05
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.30000000000000004,278329,true,23:15:43
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.30000000000000004,279502,true,23:20:22
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
8,0.30000000000000004,278973,true,23:25:01
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.30000000000000004,231902,true,23:53:58
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.30000000000000004,226401,true,23:57:44
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.30000000000000004,227518,true,00:01:32
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.30000000000000004,226570,true,00:05:18
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.30000000000000004,228863,true,00:09:07
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v2)
CREATE (v6)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v9)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v9)
CREATE (v9)-[:Edge]->(v4)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.4,84,true,04:19:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.4,2,true,04:19:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.4,2,true,04:19:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.4,2,true,04:19:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.4,1,true,04:19:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.4,8,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.4,4,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.4,6,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.4,6,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.4,6,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.4,4,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.4,4,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.4,4,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.4,5,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.4,5,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.4,3,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.4,1,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.4,2,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.4,1,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
7,0.4,1,true,04:19:57
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.5,77,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.5,1,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.5,3,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.5,1,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.5,1,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.5,2,true,09:46:02
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.5,3422,true,09:46:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.5,3436,true,09:46:09
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.5,3414,true,09:46:13
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.5,3430,true,09:46:16
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.5,3430,true,09:46:19
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.6,77,true,15:37:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.6,1,true,15:37:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.6,0,true,15:37:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.6,1,true,15:37:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.6,1,true,15:37:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.6,1,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.6,1,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.6,1,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.6,2,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.6,2,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.6,6,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.6,2,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.6,2,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.6,2,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.6,2,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.6,226,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.6,226,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.6,229,true,15:37:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.6,226,true,15:37:30
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
5,0.6,226,true,15:37:30
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7,75,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7,2,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7,2,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7,2,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7,2,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7,1,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7,1,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7,1,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7,2,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7,1,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7,70,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7,68,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7,67,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7,67,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7,67,true,21:53:46
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7999999999999999,74,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7999999999999999,2,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7999999999999999,2,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.7999999999999999,1,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7999999999999999,9,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7999999999999999,8,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7999999999999999,7,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7999999999999999,8,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.7999999999999999,8,true,04:35:08
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.7999999999999999,7,true,06:15:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v8)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.7999999999999999,1,true,06:15:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v8)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.7999999999999999,1,true,06:15:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v8)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.7999999999999999,2,true,06:15:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v8)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
9,0.7999999999999999,3,true,06:15:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v0)-[:Edge]->(v6)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v6)
CREATE (v1)-[:Edge]->(v7)
CREATE (v1)-[:Edge]->(v8)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v8)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v8)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v6)
CREATE (v4)-[:Edge]->(v7)
CREATE (v4)-[:Edge]->(v8)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v6)
CREATE (v5)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v8)
CREATE (v6)-[:Edge]->(v0)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v7)
CREATE (v6)-[:Edge]->(v8)
CREATE (v7)-[:Edge]->(v1)
CREATE (v7)-[:Edge]->(v2)
CREATE (v7)-[:Edge]->(v3)
CREATE (v7)-[:Edge]->(v4)
CREATE (v7)-[:Edge]->(v5)
CREATE (v7)-[:Edge]->(v6)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v0)
CREATE (v8)-[:Edge]->(v2)
CREATE (v8)-[:Edge]->(v3)
CREATE (v8)-[:Edge]->(v4)
CREATE (v8)-[:Edge]->(v6)
CREATE (v8)-[:Edge]->(v7)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.8999999999999999,69,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.8999999999999999,1,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.8999999999999999,1,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.8999999999999999,2,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.8999999999999999,1,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.8999999999999999,3,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.8999999999999999,3,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.8999999999999999,2,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.8999999999999999,3,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.8999999999999999,3,true,10:51:26
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.8999999999999999,3117,true,10:51:29
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.8999999999999999,3125,true,10:51:32
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.8999999999999999,3138,true,10:51:35
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.8999999999999999,3118,true,10:51:39
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.8999999999999999,3168,true,10:51:42
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.9999999999999999,72,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.9999999999999999,0,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.9999999999999999,1,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.9999999999999999,1,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
2,0.9999999999999999,1,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.9999999999999999,2,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.9999999999999999,2,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.9999999999999999,1,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.9999999999999999,1,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
3,0.9999999999999999,2,true,17:33:06
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.9999999999999999,96382,true,17:34:42
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.9999999999999999,98273,true,17:36:21
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.9999999999999999,95404,true,17:37:56
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.9999999999999999,97971,true,17:39:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
4,0.9999999999999999,95478,true,17:41:10
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.9999999999999999,70,true,18:06:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.9999999999999999,2,true,18:06:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.9999999999999999,2,true,18:06:14
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.9999999999999999,2,true,18:06:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
6,0.9999999999999999,1,true,18:06:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v0)-[:Edge]->(v0)
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v2)
CREATE (v0)-[:Edge]->(v3)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v5)
CREATE (v1)-[:Edge]->(v0)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v2)
CREATE (v1)-[:Edge]->(v3)
CREATE (v1)-[:Edge]->(v4)
CREATE (v1)-[:Edge]->(v5)
CREATE (v2)-[:Edge]->(v0)
CREATE (v2)-[:Edge]->(v1)
CREATE (v2)-[:Edge]->(v2)
CREATE (v2)-[:Edge]->(v3)
CREATE (v2)-[:Edge]->(v4)
CREATE (v2)-[:Edge]->(v5)
CREATE (v3)-[:Edge]->(v0)
CREATE (v3)-[:Edge]->(v1)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v4)
CREATE (v3)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v0)
CREATE (v4)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v2)
CREATE (v4)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v5)-[:Edge]->(v0)
CREATE (v5)-[:Edge]->(v1)
CREATE (v5)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v3)
CREATE (v5)-[:Edge]->(v4)
CREATE (v5)-[:Edge]->(v5)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
