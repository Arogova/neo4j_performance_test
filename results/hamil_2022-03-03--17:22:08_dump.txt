10,0.1,893,false,17:22:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v0)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,3,false,17:22:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v0)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,3,false,17:22:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v0)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,4,false,17:22:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v0)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.1,3,false,17:22:15
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v7)
CREATE (v2)-[:Edge]->(v7)
CREATE (v3)-[:Edge]->(v1)
CREATE (v4)-[:Edge]->(v4)
CREATE (v4)-[:Edge]->(v5)
CREATE (v4)-[:Edge]->(v7)
CREATE (v5)-[:Edge]->(v5)
CREATE (v6)-[:Edge]->(v0)
CREATE (v7)-[:Edge]->(v5)
CREATE (v8)-[:Edge]->(v8)
CREATE (v9)-[:Edge]->(v4)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,94,true,19:44:28
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v1)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v7)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,1,true,19:44:34
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v1)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v7)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,1,true,19:44:39
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v1)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v7)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,2,true,19:44:45
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v1)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v7)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
10,0.2,1,true,19:44:51
CREATE (v0 {name:0})
CREATE (v1 {name:1})
CREATE (v2 {name:2})
CREATE (v3 {name:3})
CREATE (v4 {name:4})
CREATE (v5 {name:5})
CREATE (v6 {name:6})
CREATE (v7 {name:7})
CREATE (v8 {name:8})
CREATE (v9 {name:9})
CREATE (v0)-[:Edge]->(v1)
CREATE (v0)-[:Edge]->(v4)
CREATE (v0)-[:Edge]->(v7)
CREATE (v0)-[:Edge]->(v8)
CREATE (v1)-[:Edge]->(v1)
CREATE (v1)-[:Edge]->(v6)
CREATE (v2)-[:Edge]->(v3)
CREATE (v3)-[:Edge]->(v2)
CREATE (v3)-[:Edge]->(v3)
CREATE (v4)-[:Edge]->(v2)
CREATE (v5)-[:Edge]->(v4)
CREATE (v6)-[:Edge]->(v1)
CREATE (v6)-[:Edge]->(v3)
CREATE (v6)-[:Edge]->(v6)
CREATE (v6)-[:Edge]->(v9)
CREATE (v7)-[:Edge]->(v8)
CREATE (v8)-[:Edge]->(v1)
CREATE (v8)-[:Edge]->(v6)
CREATE (v9)-[:Edge]->(v1)
CREATE (v9)-[:Edge]->(v2)
CREATE (v9)-[:Edge]->(v7)
CREATE (v9)-[:Edge]->(v8)

MATCH (n)
  WITH collect(n.name) AS allNodes
  MATCH path=(s)-[:Edge*]-(t)
  WITH path, allNodes, [y in nodes(path) | y.name] as nodesInPath
  WHERE all(node in allNodes where node in nodesInPath)
  AND size(allNodes)=size(nodesInPath)
  RETURN path LIMIT 1
------
