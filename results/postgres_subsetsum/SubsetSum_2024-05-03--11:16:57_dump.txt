seed = 1709633817068778049
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
2,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=1;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
3,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=2;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
4,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=3;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
5,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=4;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
6,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=5;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
7,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=6;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
8,-1,0,false,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=7;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
9,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=8;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
10,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=9;
------
11,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
11,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=10;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,1,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,5,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
12,-1,6,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=11;
------
13,-1,12,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,13,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,12,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,13,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,13,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,0,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,11,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,11,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,11,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,13,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,3,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,2,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
13,-1,3,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=12;
------
14,-1,13,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,17,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,12,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,13,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,6,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,6,true,11:16:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,6,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,6,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,5,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,5,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,5,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,5,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,27,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,26,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,26,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,27,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,12,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,12,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,14,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
14,-1,12,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=13;
------
15,-1,27,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,26,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,30,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,27,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,16,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,16,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,16,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,16,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,72,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,67,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,61,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,61,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,30,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,32,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,29,true,11:16:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,29,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,11,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,11,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,11,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
15,-1,11,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=14;
------
16,-1,51,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,54,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,52,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,54,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,175,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,136,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,144,true,11:16:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,141,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,81,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,67,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,53,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,54,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,83,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,56,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,53,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,56,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,59,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,44,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,47,true,11:17:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
16,-1,45,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=15;
------
17,-1,123,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,158,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,119,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,157,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,49,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,54,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,75,true,11:17:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,66,true,11:17:02
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -1);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,206,true,11:17:02
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,231,true,11:17:02
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,238,true,11:17:02
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,233,true,11:17:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -3);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,137,true,11:17:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,148,true,11:17:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,119,true,11:17:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,161,true,11:17:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,29,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,30,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,29,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
17,-1,28,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=16;
------
18,-1,125,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,160,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,124,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,169,true,11:17:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,308,true,11:17:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,297,true,11:17:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,276,true,11:17:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,258,true,11:17:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,265,true,11:17:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,256,true,11:17:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,256,true,11:17:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,256,true,11:17:07
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,519,true,11:17:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,517,true,11:17:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,518,true,11:17:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,554,true,11:17:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,121,true,11:17:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,128,true,11:17:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,122,true,11:17:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
18,-1,130,true,11:17:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 6);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=17;
------
19,-1,134,true,11:17:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,133,true,11:17:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,138,true,11:17:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,138,true,11:17:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -8);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1045,true,11:17:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1082,true,11:17:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1046,true,11:17:15
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1050,true,11:17:16
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,127,true,11:17:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,135,true,11:17:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,132,true,11:17:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,132,true,11:17:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1065,true,11:17:19
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1064,true,11:17:20
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1070,true,11:17:21
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,1057,true,11:17:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,212,true,11:17:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,215,true,11:17:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,214,true,11:17:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
19,-1,221,true,11:17:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 8);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=18;
------
20,-1,78,true,11:17:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,77,true,11:17:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,76,true,11:17:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,78,true,11:17:24
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1136,true,11:17:26
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1104,true,11:17:27
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1104,true,11:17:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1100,true,11:17:30
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1090,true,11:17:32
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1100,true,11:17:33
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1113,true,11:17:34
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,1095,true,11:17:35
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,348,true,11:17:36
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,353,true,11:17:36
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,347,true,11:17:37
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,347,true,11:17:37
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,211,true,11:17:37
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,210,true,11:17:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,214,true,11:17:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
20,-1,212,true,11:17:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -5);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=19;
------
21,-1,177,true,11:17:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,164,true,11:17:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,153,true,11:17:39
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,156,true,11:17:39
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 8);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1882,true,11:17:43
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1976,true,11:17:45
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1917,true,11:17:46
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1882,true,11:17:48
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1290,true,11:17:51
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1296,true,11:17:52
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1303,true,11:17:54
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1309,true,11:17:55
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1130,true,11:17:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1158,true,11:17:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1149,true,11:18:00
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,1148,true,11:18:01
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 8);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2627,true,11:18:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2630,true,11:18:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2617,true,11:18:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
21,-1,2622,true,11:18:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=20;
------
22,-1,2322,true,11:18:19
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2330,true,11:18:21
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2327,true,11:18:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2356,true,11:18:26
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -3);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 5);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -9);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1168,true,11:18:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1180,true,11:18:29
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1167,true,11:18:30
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,1170,true,11:18:31
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 2);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -8);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -1);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2672,true,11:18:37
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2685,true,11:18:40
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2686,true,11:18:42
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,2686,true,11:18:45
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -2);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 1);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -5);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4830,true,11:18:55
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4813,true,11:18:59
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4825,true,11:19:04
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,4817,true,11:19:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 1);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -4);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,635,true,11:19:10
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,625,true,11:19:11
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,625,true,11:19:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
22,-1,628,true,11:19:12
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -7);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=21;
------
23,-1,4612,true,11:19:21
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4617,true,11:19:26
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4633,true,11:19:31
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4602,true,11:19:35
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -3);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4589,true,11:19:45
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4630,true,11:19:49
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4587,true,11:19:54
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,4603,true,11:19:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 6);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -1);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 7);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 8);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -1);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,18783,true,11:20:36
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,18765,true,11:20:55
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,18794,true,11:21:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,18712,true,11:21:33
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -3);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -9);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -5);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -2);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,359,true,11:21:33
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,357,true,11:21:34
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,362,true,11:21:34
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,364,true,11:21:34
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -4);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 1);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -2);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,7800,true,11:21:50
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,7883,true,11:21:58
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,7823,true,11:22:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
23,-1,7883,true,11:22:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 1);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -6);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -7);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 1);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 6);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 3);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=22;
------
24,-1,2788,true,11:22:19
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2777,true,11:22:22
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2780,true,11:22:25
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2835,true,11:22:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -4);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 5);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -2);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 9);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,20069,true,11:23:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 6);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,20119,true,11:23:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 6);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,20159,true,11:23:48
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 6);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,19911,true,11:24:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -6);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -9);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -7);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -6);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 5);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 6);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -1);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -7);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 6);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,40138,true,11:25:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,40052,true,11:26:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,40111,true,11:26:49
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,40189,true,11:27:29
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 3);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -6);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -3);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -5);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 1);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -8);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -9);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 5);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2810,true,11:27:34
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 3);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2846,true,11:27:37
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 3);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2830,true,11:27:40
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 3);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,2820,true,11:27:43
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -2);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 2);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -4);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -3);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -9);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -9);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -5);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -2);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -9);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 3);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,10016,true,11:28:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -6);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,9986,true,11:28:13
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -6);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,10082,true,11:28:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -6);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
24,-1,9887,true,11:28:33
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -9);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -8);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 7);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -6);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -9);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -4);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 2);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -6);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=23;
------
25,-1,2374,true,11:28:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,2386,true,11:28:40
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,2399,true,11:28:43
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,2407,true,11:28:45
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 1);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -6);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -3);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -2);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -2);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 8);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 9);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -7);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 5);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -4);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -8);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 3);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,16541,true,11:29:18
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,16536,true,11:29:35
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,16495,true,11:29:52
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,16516,true,11:30:08
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 7);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 9);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 2);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -8);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 5);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -1);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -8);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 4);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -6);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 0);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9746,true,11:30:28
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9787,true,11:30:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9782,true,11:30:47
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9692,true,11:30:57
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -4);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -8);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 5);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 8);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -2);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 6);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 3);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, 2);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9748,true,11:31:17
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -9);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9707,true,11:31:26
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -9);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9726,true,11:31:36
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -9);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9876,true,11:31:46
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 5);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 9);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -4);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 1);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 5);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -4);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -4);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -6);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -8);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 6);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, -7);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 8);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, -6);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -9);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -5);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 3);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -1);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9792,true,11:32:06
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9894,true,11:32:15
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9810,true,11:32:25
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
25,-1,9789,true,11:32:35
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -7);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, -4);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -7);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -2);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 8);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -2);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -4);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 6);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -9);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -3);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -4);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -4);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 7);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 4);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 2);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -3);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 7);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=24;
------
26,-1,53635,true,11:34:22
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,53740,true,11:35:15
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,53465,true,11:36:09
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,52685,true,11:37:02
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 7);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 3);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, -5);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -2);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, -4);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 4);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -7);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, -6);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, -9);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, -3);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 3);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 3);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, -3);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, 3);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 9);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, 6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 7);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, -7);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 4);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,40204,true,11:38:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,40081,true,11:39:03
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,40114,true,11:39:43
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,40338,true,11:40:23
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, 9);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 8);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, 5);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 8);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, 1);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 5);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, 6);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 9);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 7);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 6);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, -2);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, -7);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, 7);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, 2);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -9);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -5);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 8);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 4);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, 8);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, 2);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -6);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, -7);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,85615,true,11:43:14
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -7);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,84294,true,11:44:38
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -7);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,86240,true,11:46:05
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -7);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
26,-1,86430,true,11:47:32
DROP TABLE IF EXISTS G;CREATE TABLE G(src int, trg int, weight int);INSERT INTO G VALUES (0, 1, 1);INSERT INTO G VALUES (0, 1, -1);INSERT INTO G VALUES (1, 2, 0);INSERT INTO G VALUES (1, 2, 5);INSERT INTO G VALUES (2, 3, 0);INSERT INTO G VALUES (2, 3, -8);INSERT INTO G VALUES (3, 4, 0);INSERT INTO G VALUES (3, 4, 6);INSERT INTO G VALUES (4, 5, 0);INSERT INTO G VALUES (4, 5, -7);INSERT INTO G VALUES (5, 6, 0);INSERT INTO G VALUES (5, 6, 9);INSERT INTO G VALUES (6, 7, 0);INSERT INTO G VALUES (6, 7, -3);INSERT INTO G VALUES (7, 8, 0);INSERT INTO G VALUES (7, 8, -1);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (8, 9, 0);INSERT INTO G VALUES (9, 10, 0);INSERT INTO G VALUES (9, 10, 1);INSERT INTO G VALUES (10, 11, 0);INSERT INTO G VALUES (10, 11, 5);INSERT INTO G VALUES (11, 12, 0);INSERT INTO G VALUES (11, 12, 4);INSERT INTO G VALUES (12, 13, 0);INSERT INTO G VALUES (12, 13, 2);INSERT INTO G VALUES (13, 14, 0);INSERT INTO G VALUES (13, 14, -4);INSERT INTO G VALUES (14, 15, 0);INSERT INTO G VALUES (14, 15, 2);INSERT INTO G VALUES (15, 16, 0);INSERT INTO G VALUES (15, 16, -3);INSERT INTO G VALUES (16, 17, 0);INSERT INTO G VALUES (16, 17, -7);INSERT INTO G VALUES (17, 18, 0);INSERT INTO G VALUES (17, 18, 1);INSERT INTO G VALUES (18, 19, 0);INSERT INTO G VALUES (18, 19, -6);INSERT INTO G VALUES (19, 20, 0);INSERT INTO G VALUES (19, 20, 3);INSERT INTO G VALUES (20, 21, 0);INSERT INTO G VALUES (20, 21, 1);INSERT INTO G VALUES (21, 22, 0);INSERT INTO G VALUES (21, 22, -9);INSERT INTO G VALUES (22, 23, 0);INSERT INTO G VALUES (22, 23, -8);INSERT INTO G VALUES (23, 24, 0);INSERT INTO G VALUES (23, 24, -7);INSERT INTO G VALUES (24, 25, 0);INSERT INTO G VALUES (24, 25, 8);


explain analyze with recursive paths(source, target, path, total_weight)                   
	AS (SELECT src as source, trg as target, ARRAY[src,weight,trg] as path, weight as total_weight
		FROM G
		WHERE src = 0
		UNION
		SELECT source, trg, array_append(array_append(path,weight),trg), total_weight+weight as total_weight	
		FROM G, paths
		WHERE src=target)
	SELECT *
	FROM paths WHERE total_weight=0 and source=0 and target=25;
------
